{
    "docs": [
        {
            "location": "/", 
            "text": "Cartoview\n\n\nAbout Cartoview\n\n\nCartoview extends the popular GeoNode SDI to provide the ability to create, share, and visualize GIS Web Mapping Applications very easily and very quickly from the browser without programming.\n\n\nCartoview enables communities of users to share geospatial applications, to collaborate on these applications, and to exchange the underlying data as Open Geospatial Consortium (OGC) compliant web services\n\n\nCartoview has been built utilizing open source software and open standards to make it available for all GIS operators and to maximize interoperability.", 
            "title": "About"
        }, 
        {
            "location": "/#cartoview", 
            "text": "", 
            "title": "Cartoview"
        }, 
        {
            "location": "/#about-cartoview", 
            "text": "Cartoview extends the popular GeoNode SDI to provide the ability to create, share, and visualize GIS Web Mapping Applications very easily and very quickly from the browser without programming.  Cartoview enables communities of users to share geospatial applications, to collaborate on these applications, and to exchange the underlying data as Open Geospatial Consortium (OGC) compliant web services  Cartoview has been built utilizing open source software and open standards to make it available for all GIS operators and to maximize interoperability.", 
            "title": "About Cartoview"
        }, 
        {
            "location": "/keys/", 
            "text": "Cartoview\n\n\nKey Features\n\n\nApp Market\n for GIS Web Application\nOnce you install GeoNode and CartoView you will be be able to install GIS applications directly from the browser\n\n\nCartoView levereages the data management and security infrastructures of \nGeoNode\n to deploy and serve GIS applications\n\n\nDevelopers create applications and deploy them on the \nApp Market\n\n\nOnce the app is deployed it will become available to all Cartoview deployments", 
            "title": "Key Features"
        }, 
        {
            "location": "/keys/#cartoview", 
            "text": "", 
            "title": "Cartoview"
        }, 
        {
            "location": "/keys/#key-features", 
            "text": "App Market  for GIS Web Application\nOnce you install GeoNode and CartoView you will be be able to install GIS applications directly from the browser  CartoView levereages the data management and security infrastructures of  GeoNode  to deploy and serve GIS applications  Developers create applications and deploy them on the  App Market  Once the app is deployed it will become available to all Cartoview deployments", 
            "title": "Key Features"
        }, 
        {
            "location": "/demo/", 
            "text": "Cartoview\n\n\nDemos\n\n\nYou can take cartoview for a test \nhere\n\n\nCreate your account, load some test data and start authoring web mapping applicaitons", 
            "title": "Demos"
        }, 
        {
            "location": "/demo/#cartoview", 
            "text": "", 
            "title": "Cartoview"
        }, 
        {
            "location": "/demo/#demos", 
            "text": "You can take cartoview for a test  here  Create your account, load some test data and start authoring web mapping applicaitons", 
            "title": "Demos"
        }, 
        {
            "location": "/QA/", 
            "text": "Cartoview\n\n\nFrequently Asked Questions\n\n\n\n\n\n\nWhat exactly is CartoView? Is it a replacement for GeoNode?\n\n\n\n\nCartoView is \nGeo App market\n for GeoNode. It is not a fork / improvement / reprlacement of Geonode, but rather additional code aimed at making it more extensible to integrate third party apps directly from the browser.\n\n\n\n\n\n\n\n\nWhat are the goals of Cartoview?\n\n\n\n\nSharing GIS Apps\n\n\nProvide apps for common tasks like visualizing and querying feature services.\n\n\nExtend the functions of the GeoNode SDI beyond data management\n\n\nProvide a solid core of utilities that can be used to help developers integrate and deploy their Geo apps\n\n\nFoster an ecosystem of apps extending easily deplyable and installable\n\n\n\n\n\n\n\n\nCan I use CartoView with GeoNode Version 2.4 and earlier?\n\n\n\n\nCartoView starts working with GeoNode 2.6\n\n\n\n\n\n\n\n\nI have an idea! What should I do?\n\n\n\n\nPlease file an issue. \nIssues\n are a great way to discuss new ideas, build consensus and talk about implementation details.\n\n\n\n\n\n\n\n\nI built something with cartoview can I show you?\n\n\n\n\nAbsolutely! Share it on twitter with \n@ahmednosman\n , \n@cartoview\n. You can add your project to the list in the readme too.\n\n\n\n\n\n\n\n\nI built a reusable app  can I contribute it?\n\n\n\n\nOfcourse. This is the purpose of Cartoview. Read the instructions on developing and deploying apps. Create an account on cartoview.org and load your app. Your app will be immediately available to all Cartoview deployments\n\n\n\n\n\n\n\n\nWhat are some good CartoView Apps?\n\n\n\n\nSimple Map Viewer\n : This app allows the creation of html mobile ready viewer app with most basic features.\n\n\nFeature Detailed Viewer\n : A map and list applications for store locations or similar usage\n\n\nWebApp Builder\n : A customizable GIS\n\n\n\n\n\n\n\n\nRunning CartoView on GeoNode and QGIS Server?\n\n\n\n\nThere is no reason for Cartoview not to work on this deployment. (This was never tested). Apps relying on GeoServer ofcourse will not work", 
            "title": "Frequently Asked Questions"
        }, 
        {
            "location": "/QA/#cartoview", 
            "text": "", 
            "title": "Cartoview"
        }, 
        {
            "location": "/QA/#frequently-asked-questions", 
            "text": "", 
            "title": "Frequently Asked Questions"
        }, 
        {
            "location": "/installation/", 
            "text": "Cartoview\n\n\nInstallation Requirements\n\n\n\n\n\n\nInstall \nPython2.7\n\n\n\n\n\n\nInstall \n1.8.7 \n= Django \n1.9a0\n\n\n\n\nDocker users\n\n\n\n\nyou need to install \ndocker-compose\n\n\n\n\n\n\n\n\n\n\nInstall On Ubuntu linux\n\n\n\n\n\n\nFollow these setps if you don't have Geonode  installed on your ubuntu system.\n\n\n\n\n\n\nThese instructions will install \nGeonode\n and Cartoview.\n\n\n\n\nNote\n\n\nVerify your installation is completed by adding any layer in \nGeonode\n\n\n\n\n\n\n\n\nDon't Forget \nInstallation requirements\n\n\n\n\n\n\nInstall \nGeonode=2.5.15\n\n\n\n\n\n\nInstall CartoView Libraries\n\n\npip install cartoview\n\n\n\n\n\n\n\nInstall CartoView_Django Project\n\n\ndjango-admin.py startproject --template=https://github.com/cartologic/cartoview-project-template/archive/master.zip --name django.env,uwsgi.ini,.bowerrc \nyour_project_name\n\n\n\n\n\n\n\nGo to your Project Folder\n\n\ncd \nyour_project_name\n\n\n\n\n\n\n\nDetect changes in \napp_manager\n App\n\n\npython manage.py makemigrations app_manager\n\n\n\n\n\n\n\ncreate people Table\n\n\npython manage.py migrate people\n\n\n\n\n\n\n\nCreate Rest of tables :\n\n\npython manage.py migrate\n\n\n\n\n\n\n\nload default User\n\n\npython manage.py loaddata sample_admin.json\n\n\n\n\n\n\n\nload default oauth app\n\n\npython manage.py loaddata json/default_oauth_apps.json\n\n\n\n\n\n\n\nTest Server (Development)\n\n\n\n\n\n\nTo start Development Server run this Command :\n\n\npython manage.py runserver 0.0.0.0:8000\n\n\n\n\n\n\n\n\n\n\n\n\n\nInfo\n\n\n(Optional)\n if want to override any settings variable rename \nlocal_settings.py.sample\n to \nlocal_settings.py\n then override settings you want inside \nlocal_settings.py\n\n\n\n\n\n\nWarning\n\n\nDon't Forget to Change \nyour_project_name\n to desired name.\n\n\n\n\n\n\nApps From Geo App Market\n\n\n\n\n\n\nto Install apps from \nGeo App Market\n\n\n\n\n\n\nLoad Default Store\n\n\npython manage.py loaddata app_stores.json\n\n\n\n\n\n\n\nInstall \nnodejs\n and then install \nbower\n we need them to install app_manager dependencies\n\n\n\n\nin this step we will install required files in your project folder type :\n    \nbower install \n\n\nCollect Required files type:\n    \npython manage.py collectstatic --noinput\n\n\nNow you Can Install Apps from \nGeo App Market\n\n\nGo to \napps\n tab and click \nmanage apps\n Button and install app you want\n\n\n\n\n\n\nInstall On Windows\n\n\n\n\nInstall \nPython2.7\n\n\nMake Sure to add the Python in the Path, as this is not setup by default\n\n\ncheck add python.exe to PATH\n    \n\n    \n\n\n\n\n\n\n\n\nInstall Django 1.8.7 open cmd and type:\n\n\npip install django==1.8.7\n\n\n\n\n\n\n\nWe recommend to use Docker\n\n\n\n\nFollow \nDocker Instructions\n\n\n\n\nExisting GeoNode Users\n\n\nCheck GeoNode and Cartoview version compatibility in \nPYPI\n then install Cartoview\n\n\n\n\n\n\nRequirements:\n\n\n\n\nGeoNode == 2.5.15\n\n\n\n\n\n\nAttention\n\n\nWe will Support more version of Geonode Soon!!\n\n\n\n\n\n\n\n\ninstall cartoview libraries\n\n\npip install cartoview == \nversion\n\n\n\n\n\n\n\nCreate Cartoview Project\n\n\ndjango-admin.py startproject --template=https://github.com/cartologic/cartoview-project-template/archive/master.zip --name django.env,uwsgi.ini,.bowerrc \nyour_project_name\n\n\n\n\n\n\n\nGo to your Project Folder\n\n\ncd \nyour_project_name\n\n\n\n\n\n\n\ndetect Changes in app_manager\n\n\npython manage.py makemigrations app_manager\n\n\n\n\n\n\n\ncreate People table\n\n\npython manage.py migrate people\n\n\n\n\n\nBug\n\n\nthis command will fire an error ignore it\n\n\n\n\n\n\n\n\ncreate rest of database tables\n    \npython manage.py migrate\n\n\n\n\n\n\nCollect static Files\n\n\npython manage.py collectstatic --noinput\n\n\n\n\n\n\n\nNow Development Server :\n    \npython manage.py runserver 0.0.0.0:8000\n\n\n\n\n\n\nDeployment notes\n\n\n\n\n\n\n\n\nImportant\n\nin Production Configure Geoserver before uploading layers from \nhere\n\n\n\n\n\n\n\n\nImportant\n\n\nOnce CartoView is installed is expected to install all apps from the app store automatically\nAt the moment CartoView will fully support apache server only\nFor nginx deployments, CartoView will be able to detect new apps and get the updates, how ever to apply the updates, web server restart will be required to complete        the process\nCartoView will not be able to restart nginx when new apps are installed.\nAfter you install or update apps from the app manager page you will need to restart nginx manually until this issue is addressed in the future\n\n\n\n\nfollow these steps to get apps working on nginx\n\n\ncollect static files using this commands\n    \npython manage.py collectstatic --noinput\n\n\nrestart server now you should restart server after installing any app", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#cartoview", 
            "text": "", 
            "title": "Cartoview"
        }, 
        {
            "location": "/installation/#installation-requirements", 
            "text": "Install  Python2.7    Install  1.8.7  = Django  1.9a0   Docker users   you need to install  docker-compose", 
            "title": "Installation Requirements"
        }, 
        {
            "location": "/installation/#install-on-ubuntu-linux", 
            "text": "Follow these setps if you don't have Geonode  installed on your ubuntu system.    These instructions will install  Geonode  and Cartoview.   Note  Verify your installation is completed by adding any layer in  Geonode     Don't Forget  Installation requirements    Install  Geonode=2.5.15    Install CartoView Libraries  pip install cartoview    Install CartoView_Django Project  django-admin.py startproject --template=https://github.com/cartologic/cartoview-project-template/archive/master.zip --name django.env,uwsgi.ini,.bowerrc  your_project_name    Go to your Project Folder  cd  your_project_name    Detect changes in  app_manager  App  python manage.py makemigrations app_manager    create people Table  python manage.py migrate people    Create Rest of tables :  python manage.py migrate    load default User  python manage.py loaddata sample_admin.json    load default oauth app  python manage.py loaddata json/default_oauth_apps.json    Test Server (Development)    To start Development Server run this Command :  python manage.py runserver 0.0.0.0:8000       Info  (Optional)  if want to override any settings variable rename  local_settings.py.sample  to  local_settings.py  then override settings you want inside  local_settings.py    Warning  Don't Forget to Change  your_project_name  to desired name.    Apps From Geo App Market    to Install apps from  Geo App Market    Load Default Store  python manage.py loaddata app_stores.json    Install  nodejs  and then install  bower  we need them to install app_manager dependencies   in this step we will install required files in your project folder type :\n     bower install   Collect Required files type:\n     python manage.py collectstatic --noinput  Now you Can Install Apps from  Geo App Market  Go to  apps  tab and click  manage apps  Button and install app you want", 
            "title": "Install On Ubuntu linux"
        }, 
        {
            "location": "/installation/#install-on-windows", 
            "text": "Install  Python2.7  Make Sure to add the Python in the Path, as this is not setup by default  check add python.exe to PATH\n     \n         Install Django 1.8.7 open cmd and type:  pip install django==1.8.7    We recommend to use Docker   Follow  Docker Instructions", 
            "title": "Install On Windows"
        }, 
        {
            "location": "/installation/#existing-geonode-users", 
            "text": "Check GeoNode and Cartoview version compatibility in  PYPI  then install Cartoview    Requirements:   GeoNode == 2.5.15    Attention  We will Support more version of Geonode Soon!!     install cartoview libraries  pip install cartoview ==  version    Create Cartoview Project  django-admin.py startproject --template=https://github.com/cartologic/cartoview-project-template/archive/master.zip --name django.env,uwsgi.ini,.bowerrc  your_project_name    Go to your Project Folder  cd  your_project_name    detect Changes in app_manager  python manage.py makemigrations app_manager    create People table  python manage.py migrate people   Bug  this command will fire an error ignore it     create rest of database tables\n     python manage.py migrate    Collect static Files  python manage.py collectstatic --noinput    Now Development Server :\n     python manage.py runserver 0.0.0.0:8000", 
            "title": "Existing GeoNode Users"
        }, 
        {
            "location": "/installation/#deployment-notes", 
            "text": "Important \nin Production Configure Geoserver before uploading layers from  here     Important  Once CartoView is installed is expected to install all apps from the app store automatically\nAt the moment CartoView will fully support apache server only\nFor nginx deployments, CartoView will be able to detect new apps and get the updates, how ever to apply the updates, web server restart will be required to complete        the process\nCartoView will not be able to restart nginx when new apps are installed.\nAfter you install or update apps from the app manager page you will need to restart nginx manually until this issue is addressed in the future   follow these steps to get apps working on nginx  collect static files using this commands\n     python manage.py collectstatic --noinput  restart server now you should restart server after installing any app", 
            "title": "Deployment notes"
        }, 
        {
            "location": "/docker/", 
            "text": "Cartoview\n\n\nDocker\n\n\n\n\nbe sure you installed all \nrequirements\n\n\nInstall \nDocker\n\n\nFor Windows User install \nmake\n by\n\n\ninstalling \nMSYS2\n\n\nopen msys shell and install \nmake\n using this command \npacman -S make\n\n\nadd \nmsys_path\n\\usr\\bin\n to \nPATH\n envirnment variable\n\n\n\n\n\n\nfor windows users please use \nDocker Quickstart Terminal\n to execute the following commands\n\n\n\n\nCreate Cartoview Project which contains required files to run and configure Docker using this command:\n\n\ndjango-admin.py startproject --template=https://github.com/cartologic/cartoview-project-template/archive/master.zip --name django.env,uwsgi.ini,.bowerrc \nyour_project_name\n\n\n\n\n\n\n\nReplace \nyour_project_name\n with the desired name \n\n\n\n\n\n\nGo to your project Folder\n\n\ncd \nyour_project_name\n\n\n\n\n\n\n\nOpen \ndocker-compose.yml\n and Look at the port numbers for GeoServer and Postges and change the number before the \n:\n this will be the port on your machine\n\n\n\n\n\n\nIf you want to run this project with a domain :\n\n\n\n\nchange \ndjango.env\n(this is the file of the common django setting variables) file in your Project Folder to be some thing like this:\n\n\n\n\n\n\nTip\n\n\n\n\nany file with \n.env\n EXTENSION Is a file that contains environment variables passed to specific container for example \ndjango.env\n file contains environment variables passed to Cartoview container so django can read these variables and use them\n\n\n\n\n\n\n\n\nTip\n\n\n\n\ndefault database username: \ncartologic\n and password: \nroot\n\n\ndefault database user in \npostgis.env\n file in your project if want to change it.\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\nFor windows Users Please Comment volumes lines of postgis Container only in \ndocker-compose.yml\n by preceding the line with \n#\n something like this:\n    \n    #   volumes:\n    #      - pgdata:/var/lib/postgresql\n\n\n\n\n\n\nDATABASE_URL=postgres://\ndatabase_user_name\n:\ndatabase_password\n@postgis:5432/cartoview\nGEOSERVER_PUBLIC_LOCATION=http://\nyour_domain_or_ip\n/geoserver/\nGEOSERVER_LOCATION=http://geoserver:8080/geoserver/\nSITEURL=http://\nyour_domain_or_ip\n\nALLOWED_HOSTS=['*']\n\n\n\n\n\nTip\n\n\n\n\nFor windows users the default IP aasigned to docker is : \n192.168.99.100\n so the default django.env file must be some thing like this:\n\nDATABASE_URL=postgres://\ndatabase_user_name\n:\ndatabase_password\n@postgis:5432/cartoview\nGEOSERVER_PUBLIC_LOCATION=http://192.168.99.100/geoserver/\nGEOSERVER_LOCATION=http://geoserver:8080/geoserver/\nSITEURL=http://192.168.99.100\nALLOWED_HOSTS=['*']\n\n\n\n\n\n\n\n\n\n\nStart Docker images(cartoview,geoserver,postgres) type :\n\n\nmake run\n\n\n\n\n\n\n\ncreate  people table :\n\n\nmake migrate_people\n\n\n\n\n\nBug\n\n\nthis command will fire an error ignore it\n\n\n\n\n\n\n\n\ncreate rest of  tabels and collect static files :\n\n\nmake static_db\n\n\n\n\n\nSuccess\n\n\nNow you can Access cartoview on \nhttp://localhost\n or \nhttp://\nyour_domain_or_ip\n\n\n\n\n\n\nImportant\n\n\nFinal step Configure Geoserver before uploading layers from \nhere\n\n\n\n\n\n\n\n\nDeployment notes\n\n\n\n\n\n\n\n\nImportant\n\nOnce CartoView is installed is expected to install all apps from the app store automatically\nCartoView will not be able to restart docker when new apps install.\nAfter you install any new app or app update you will need to restart docker manually until this issue is addressed in the future\n\n\nfollow these steps to get apps working on nginx\n\n\ncollect static files using this commands in your project folder\n    \nmake collect_static\n\n\nrestart server now with the following command you should restart server after installing any app\n    \ndocker-compose restart cartoview\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWindows Issues\n\n\n\n\nDocker volumes have some issues  with windows so you have to backup your postgres database.\n\n\n\n\nLinux Docker\n\n\n\n\nyou will Find all postgres data in pgdata folder", 
            "title": "Docker"
        }, 
        {
            "location": "/docker/#cartoview", 
            "text": "", 
            "title": "Cartoview"
        }, 
        {
            "location": "/docker/#docker", 
            "text": "be sure you installed all  requirements  Install  Docker  For Windows User install  make  by  installing  MSYS2  open msys shell and install  make  using this command  pacman -S make  add  msys_path \\usr\\bin  to  PATH  envirnment variable    for windows users please use  Docker Quickstart Terminal  to execute the following commands   Create Cartoview Project which contains required files to run and configure Docker using this command:  django-admin.py startproject --template=https://github.com/cartologic/cartoview-project-template/archive/master.zip --name django.env,uwsgi.ini,.bowerrc  your_project_name    Replace  your_project_name  with the desired name     Go to your project Folder  cd  your_project_name    Open  docker-compose.yml  and Look at the port numbers for GeoServer and Postges and change the number before the  :  this will be the port on your machine    If you want to run this project with a domain :   change  django.env (this is the file of the common django setting variables) file in your Project Folder to be some thing like this:    Tip   any file with  .env  EXTENSION Is a file that contains environment variables passed to specific container for example  django.env  file contains environment variables passed to Cartoview container so django can read these variables and use them     Tip   default database username:  cartologic  and password:  root  default database user in  postgis.env  file in your project if want to change it.     Warning   For windows Users Please Comment volumes lines of postgis Container only in  docker-compose.yml  by preceding the line with  #  something like this:\n         #   volumes:\n    #      - pgdata:/var/lib/postgresql    DATABASE_URL=postgres:// database_user_name : database_password @postgis:5432/cartoview\nGEOSERVER_PUBLIC_LOCATION=http:// your_domain_or_ip /geoserver/\nGEOSERVER_LOCATION=http://geoserver:8080/geoserver/\nSITEURL=http:// your_domain_or_ip \nALLOWED_HOSTS=['*']   Tip   For windows users the default IP aasigned to docker is :  192.168.99.100  so the default django.env file must be some thing like this: DATABASE_URL=postgres:// database_user_name : database_password @postgis:5432/cartoview\nGEOSERVER_PUBLIC_LOCATION=http://192.168.99.100/geoserver/\nGEOSERVER_LOCATION=http://geoserver:8080/geoserver/\nSITEURL=http://192.168.99.100\nALLOWED_HOSTS=['*']      Start Docker images(cartoview,geoserver,postgres) type :  make run    create  people table :  make migrate_people   Bug  this command will fire an error ignore it     create rest of  tabels and collect static files :  make static_db   Success  Now you can Access cartoview on  http://localhost  or  http:// your_domain_or_ip    Important  Final step Configure Geoserver before uploading layers from  here", 
            "title": "Docker"
        }, 
        {
            "location": "/docker/#deployment-notes", 
            "text": "Important \nOnce CartoView is installed is expected to install all apps from the app store automatically\nCartoView will not be able to restart docker when new apps install.\nAfter you install any new app or app update you will need to restart docker manually until this issue is addressed in the future  follow these steps to get apps working on nginx  collect static files using this commands in your project folder\n     make collect_static  restart server now with the following command you should restart server after installing any app\n     docker-compose restart cartoview", 
            "title": "Deployment notes"
        }, 
        {
            "location": "/docker/#windows-issues", 
            "text": "Docker volumes have some issues  with windows so you have to backup your postgres database.", 
            "title": "Windows Issues"
        }, 
        {
            "location": "/docker/#linux-docker", 
            "text": "you will Find all postgres data in pgdata folder", 
            "title": "Linux Docker"
        }, 
        {
            "location": "/developers/", 
            "text": "Cartoview\n\n\nFor Developers\n\n\n\n\n\n\nCartoview Provides a \nGeoApp Market\n for GIS Developers.\n\n\n\n\n\n\nDevelope your own App\n\n\n\n\n\n\nCreate a new empty app from cartoview app template as follow in your cartoview project directory\n\ndjango-admin.py startproject --template=https://github.com/cartologic/cartoview-app-template/archive/master.zip \nyour_App_name\n\n\n\n\n\n\nEdit cartoview_project/apps/apps.yml and add entry for your app\n\n- name: \napp_name\n\n  active: true\n  order: 0\n\n\n\n\n\n\nAdd the App to the database form django admin interface\n\n\n\n\n\n\n\n\nDon't forget to check Single instace option if u want to test it for the first time\n\n\n\n\n\n\n\n\nNow on Cartoview in Apps tab your app will Appear Some thing like this\n\n\n\n\n\n\n\n\nClick Explore Button will open App home page\n\n\n\n\n\n\n\n\nMake Changes to your App\n\n\n\n\n\n\nNow Zip your App and Upload it to \nGeoApp Market\n\n\n\n\n\n\nLogin on \nGeoApp Market\n and click \nMYAPPS\n tab\n\n\n\n\n\n\nClick \nSubmit New App\n Button and Fill Required Info\n\n\n\n\n\n\nNow Users can install your app", 
            "title": "Developers"
        }, 
        {
            "location": "/developers/#cartoview", 
            "text": "", 
            "title": "Cartoview"
        }, 
        {
            "location": "/developers/#for-developers", 
            "text": "Cartoview Provides a  GeoApp Market  for GIS Developers.    Develope your own App    Create a new empty app from cartoview app template as follow in your cartoview project directory django-admin.py startproject --template=https://github.com/cartologic/cartoview-app-template/archive/master.zip  your_App_name    Edit cartoview_project/apps/apps.yml and add entry for your app - name:  app_name \n  active: true\n  order: 0    Add the App to the database form django admin interface     Don't forget to check Single instace option if u want to test it for the first time     Now on Cartoview in Apps tab your app will Appear Some thing like this     Click Explore Button will open App home page     Make Changes to your App    Now Zip your App and Upload it to  GeoApp Market    Login on  GeoApp Market  and click  MYAPPS  tab    Click  Submit New App  Button and Fill Required Info    Now Users can install your app", 
            "title": "For Developers"
        }, 
        {
            "location": "/contrib/", 
            "text": "Cartoview\n\n\nContributing to CartoView\n\n\nPlease refer to each project's style guidelines and guidelines for submitting patches and additions. In general, we follow the \"fork-and-pull\" Git workflow.\n\n\n\n\nFork the repo on GitHub\n\n\nClone the project to your own machine\n\n\nCommit changes to your own branch\n\n\nPush your work back up to your fork\n\n\nSubmit a Pull request so that we can review your changes\n\n\n\n\n\n\nNote\n\n\nBe sure to merge the latest from \"upstream\" before making a pull request!", 
            "title": "Contribute"
        }, 
        {
            "location": "/contrib/#cartoview", 
            "text": "", 
            "title": "Cartoview"
        }, 
        {
            "location": "/contrib/#contributing-to-cartoview", 
            "text": "Please refer to each project's style guidelines and guidelines for submitting patches and additions. In general, we follow the \"fork-and-pull\" Git workflow.   Fork the repo on GitHub  Clone the project to your own machine  Commit changes to your own branch  Push your work back up to your fork  Submit a Pull request so that we can review your changes    Note  Be sure to merge the latest from \"upstream\" before making a pull request!", 
            "title": "Contributing to CartoView"
        }, 
        {
            "location": "/issues/", 
            "text": "Cartoview\n\n\nIssues\n\n\nIf something isn't working the way you expected, please take a look at \nprevious issues\n that resolve common problems first.\n\n\nHave you found a new bug? Want to request a new feature? We'd love to hear from you. Please let us know by submitting an issue.", 
            "title": "Issues"
        }, 
        {
            "location": "/issues/#cartoview", 
            "text": "", 
            "title": "Cartoview"
        }, 
        {
            "location": "/issues/#issues", 
            "text": "If something isn't working the way you expected, please take a look at  previous issues  that resolve common problems first.  Have you found a new bug? Want to request a new feature? We'd love to hear from you. Please let us know by submitting an issue.", 
            "title": "Issues"
        }, 
        {
            "location": "/market/", 
            "text": "Warning\n\n\nthis steps works only if Cartoview up and running\n\n\n\n\n\n\nto Install apps from \nGeo App Market\n Follow these steps\n\n\nGo to \napps\n tab and click \nmanage apps\n Button and install app you want", 
            "title": "Install App"
        }
    ]
}